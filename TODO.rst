- Think of a paper both Xiavan and Michael can be on!!!

Documentation
=============

- Finish and update tutorial

- Make autogenerated API documentation (or maybe it's already done?)

- Document public functions and classes

- Ensure scripts have usage instructions and gracefully exit with invalid CLI
  arguments (ideally invalid input too, but one step at a time)

- A Sphinx page for the scripts, with a brief blurb on what each one does (at
  least the ones that a user might directly call) and put into categories.

- A "developers overview" for the codebase

Scripts
=======

- Make ``aspera-copy`` call Python Aspera code, make it a generic downloader
  (rename to "btk-download" or something) which takes a generic URL and uses
  Aspera if a compatible host is detected and Aspera is installed, otherwise
  falling back to regular downloading.

- Take a look through the script names and make sure they are unlikely to
  collide with anything else on the system. ``dataset`` is a likely culprit.
  Does there need to be a ``btk-`` namespace as well as ``dt-`` for scripts
  that really have nothing to do with data tables? If so, some of the stuff in
  ``dt-`` could probably be moved to it.

Cleanup
=======

- ``BioTK.make`` needs to be updated or removed or folded into Python code. I
  have recently added a ``dataset`` script to download and output datasets to
  stdout which could probably replace it (if downloads are cached). It also
  contains ``wget`` which should be switched to ``curl`` if the Makefile
  approach is kept.

- Does ``multiget`` even work? And if so, ``wget`` needs to be removed from it
  because we don't want BioTK to depend on wget AND curl.
