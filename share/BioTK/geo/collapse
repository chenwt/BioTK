#!/usr/bin/env bash

# samples X probes on stdin -> samples X genes on stdout

DATA_DIR=${DATA_DIR-$HOME/data}

platform=$(basename $1 .gz)
taxon=$(btkdb query \
    "SELECT taxon.accession FROM taxon \
    INNER JOIN platform \
    ON platform.taxon_id=taxon.id
    WHERE platform.accession='$platform'")

[ -z "$platform" ] || [ -z "$taxon" ] && {
    echo "USAGE: $0 path/to/GPLxxx.gz" 1>&2
    exit 1
}

{
    echo "* Collapsing matrix"
    echo -e "\t* Accession: $platform"
    echo -e "\t* Taxon ID: $taxon" 
} 1>&2

if [ ! -f $DATA_DIR/stanford/ailun/${platform}.annot.gz ]; then
    echo "Probe-gene mapping does not exist for platform: $platform" 1>&2
    exit 0
fi

map=$(mktemp -p /dev/shm) 
trap "rm -f $map" EXIT
zcat $DATA_DIR/stanford/ailun/${platform}.annot.gz \
    | cut -f1-2 \
    | sort -k1b,1 \
    | tjoin -j1 - <(zcat $1 | head -10 | dm describe) \
    | sort -rnk3 \
    | tawk '!($2 in a) { print; a[$2] = 0; }' \
    | cut -f1-2 \
    | tjoin -1 2 -2 1 -a 2 - \
        <(dataset gene-list $taxon) \
    | sort -k2b,2 > $map

header=$(mktemp -p /dev/shm)
trap "rm -f $header" EXIT
zcat $1 | head -1 | tr '\t' '\n' > $header

export map header

echo -ne "Gene ID\t"
tr '\n' '\t' < <(cut -f1 $map | sort -k1b,1) | sed 's/\t$//'
echo

process() {
    while read line; do
        sample=$(echo "$line" | tr '\t' '\n' | head -1)
        echo -ne "$sample\t"
        paste $header <(echo "$line" | tr '\t' '\n') \
            | sed '1d' \
            | tjoin -1 2 -2 1 -a 1 $map - \
            | tsort -k2b,2 \
            | cut -f3 \
            | sed 1d \
            | tr '\n' '\t'
        echo
    done
}
export -f process 

block_size=10M
zcat $1 | sed 1d | parallel --block $block_size --pipe process
