#!/usr/bin/env bash

export tmpdir=$(mktemp -d -p /dev/shm)
trap 'rm -rf $tmpdir' EXIT
mkdir -p $tmpdir/expression

shopt -s nullglob

verbose=

while getopts v opt; do
    case $opt in
        v) verbose=y ;;
    esac
done
shift $((OPTIND - 1))
export archive="$1"
export verbose

process() {
    file="$1"
    gsm=$(basename ${file%%-*})
    if [[ $verbose == "y" ]]; then
        echo "** Processing $gsm ..." 1>&2
        echo -ne "$gsm\t"
    fi
    cut -f1-2 $file \
        | sort -k1,1b \
        | join -o 1.2 -t '	' -a 2 - $tmpdir/probes \
        | awk 'NF == 0 { print "NaN" } NF == 1 { print $1 }' \
        | tr '\n' '\t' \
        | sed 's/\t$//'
    echo
    rm $file
}
export -f process

{
    catwhile -f "$tmpdir" -s 1000 < "${archive}" \
        | gzip -cd \
        | bsdtar -C $tmpdir/expression -x -f - 'GSM*-1.txt'
    touch $tmpdir/done
} &

echo "Working directory =" $tmpdir 1>&2
echo "* Unpacking probes ..." 1>&2
bsdtar -q -xOf ${archive} 'GPL*.txt' \
    | cut -f1 | sort -k1,1b > $tmpdir/probes

echo "* Exporting expression vectors ..." 1>&2

echo -ne 'Probe ID\t'
tr '\n' '\t' < $tmpdir/probes | sed 's/\t$//'
echo

while true; do
    find $tmpdir/expression -type f \
        | parallel process
    if [ -e "$tmpdir/done" ]; then
        break
    fi
    sleep 1
done | dsort -k1,1b | transpose
