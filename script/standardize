#!/usr/bin/env python

import argparse
import sys

import numpy as np

def coerce_float(x):
    try:
        return float(x)
    except ValueError:
        return np.nan

if __name__ == "__main__":
    p = argparse.ArgumentParser()
    p.add_argument("--skip-header", "-H", 
            action="store_true",
            help="Print the first line unchanged.")
    p.add_argument("--log-transform", "-l",
            action="store_true",
            help="Conditionally log-transform each row.")
    p.add_argument("file", nargs="?", type=argparse.FileType("r"),
            default=sys.stdin)
    args = p.parse_args()

    if args.skip_header:
        sys.stdout.write(next(args.file))

    for line in args.file:
        fields = line.strip().split("\t")
        data = np.array([coerce_float(f) for f in fields[1:]])
        ix = np.invert(np.isnan(data))
        if ix.sum() < (0.1 * len(ix)):
            continue

        if args.log_transform:
            if (data[ix] > 100).any():
                data = np.log2(data + 1 - data[ix].min())
        mu = data[ix].mean()
        std = data[ix].std()
        print(fields[0], *["%0.3f" % ((x - mu) / std) for x in data], sep="\t")
