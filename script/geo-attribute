#!/usr/bin/env bash

species="$1"
SED_SCRIPT=$(dirname $0)/tissue.sed
echo -e "Sample ID\tAge\tCancer\tGender\tTissue"

cat <<EOF |
.separator "\t"
SELECT gsm, REPLACE(REPLACE(characteristics_ch1,"	"," "), "
", "; ")
FROM gsm
WHERE characteristics_ch1 != ''
AND organism_ch1='$species';
EOF
sqlite3 $(btk-resource GEOmetadb) \
    | gawk -vSED_SCRIPT="$SED_SCRIPT" -f <(cat <<"EOF"
BEGIN {
    IGNORECASE = 1
    FS=OFS="\t";
    cmd = "sed -u -f "SED_SCRIPT
} {
    age="";
    gender="";
    tissue="";
} match($2, /[\t ]age: ([0-9]+(\.*[0-9]*)?)/, m) { 
    age = m[1]; 
    if ($0 ~ /day/) {
        age /= 7;
    }
    #printf "%s\tAge\t%s\t%s\t%s\n",$1,age,m[0],$2;
} 
# Prefer 'tissue', but fall back to 'cell type'
match($2, /cell type: ([A-Za-z0-9\+\- ]+)/, m) {
    print m[1] |& cmd
    cmd |& getline tissue
} match($2, /tissue: ([A-Za-z0-9\+\- ]+)/, m) {
    print m[1] |& cmd
    cmd |& getline tissue
}
match($2, /gender\s*:\s*m/) { gender=1; }
match($2, /gender\s*:\s*f/) { gender=0; }
{
    cancer=0;
    if (match($2, /tumor|cancer|sarcoma|glioma|leukem|mesothelioma\
        |metastasis|carcinoma|lymphoma|blastoma|cll|ptcl|infected/, m)) { 
        cancer=1 
    }

    print $1,age,cancer,gender,tissue;
} END {
    close(cmd)
}
EOF
) | sed '$d'

# vim: set ft=awk :
