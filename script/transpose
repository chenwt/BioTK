#!/usr/bin/env bash

source $(dirname $0)/BioTK.sh

usage() {
    cat <<EOF 1>&2
USAGE: $0 <options>

Transpose a tab-delimited matrix from stdin. 

Options:
  -m : perform the entire transpose in RAM
  -l <count> : number of lines to transpose at a time;
    a larger number requires more RAM
    (default: 250)
EOF
    exit $1
}

transpose-block() {
    awk -f <(cat <<"EOF"

BEGIN {
    OFS="\t"
    FS="\t"
}

{
    for (i=1; i<=NF; i++) {
        a[NR,i] = $i
    }
}
    
NF > p { p = NF }
    
END {
    for (j=1; j<=p; j++) {
        s=a[1,j]
        for (i=2; i<=NR; i++) {
            s=s"\t"a[i,j]
        }
        print s
    }
}

EOF
)

}
export -f transpose-block

process() {
    lz4 -dq $1 | transpose-block | lz4 -q > ${1}.tmp
    mv ${1}.tmp $1
}
export -f process

lines=250
IN_MEM=

while getopts ml: opt; do
    case $opt in
        m) IN_MEM=y ;;
        l) lines="$OPTARG" ;;
        h) usage 0 ;;
    esac
done


if [ ! -z "$IN_MEM" ]; then
    # Transpose in RAM
    transpose-block
else
    # Otherwise, store intermediate results in tempfiles
    wd=$(mktemp -d)
    trap 'rm -rf $wd' SIGHUP SIGINT SIGTERM ERR

    split -l $lines --filter='lz4 > $FILE' - $wd/x
    parallel process ::: $wd/x*
    lzpaste $wd/*
    rm -rf $wd
fi
