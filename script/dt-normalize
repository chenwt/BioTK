#!/usr/bin/env python3

import sys

import click
import numpy as np
import pandas as pd
from scipy.interpolate import interp1d

import BioTK.io
from BioTK.matrix.preprocess import standardize as _standardize

def quantile_normalize(X, thresh=10):
    X = X.dropna(thresh=10, axis=1)
    mu = np.array(sorted(X.mean()))
    fn = interp1d(range(X.shape[1]), mu)

    X_n = np.zeros(X.shape)
    X_n[:] = np.nan
    for i in range(X.shape[0]):
        x = np.array(X.ix[i,:])
        ix = ~np.isnan(x)
        n = ix.sum()
        x_n = fn(np.argsort(x[ix]) * (X.shape[1] / n))
        X_n[i,ix] = x_n
    X_n = pd.DataFrame(X_n, index=X.index, columns=X.columns)
    assert (X_n.isnull() == X.isnull()).all().all()
    return X_n

def standardize():
    BioTK.io.read_matrix(sys.stdin)\
        .apply(_standardize)\
        .dump()

@click.command()
@click.option("--method", "-m", 
        type=click.Choice(["quantile", "standardize"]),
        required=True)
def main(method):
    if method == "quantile":
        X = pd.read_csv(sys.stdin, sep="\t", index_col=0)
        X_n = quantile_normalize(X)
        X_n.to_csv(sys.stdout, sep="\t", float_format="%0.3f")
    elif method == "standardize":
        standardize()

if __name__ == "__main__":
    main()
