#!/usr/bin/env bash

# Pipeline for extracting data from all GEO accessions.

# For each step in the process, if that step fails,
# create a zero-size file with the same name as the output.

# Such files will prevent future attempts, and the pipeline will
# stop at that step.

# (Can this be rewritten in a more "monadic" format using tee?)

source $(dirname $0)/BioTK.sh

[ $# != 0 ] && {
    cat <<"EOF"
Download and process all GEO matrices.

USAGE: geo build-db

Creates database in $BTK_DATA/ncbi/geo/.

Known limitations:
- Only processes accessions with mappings in AILUN
EOF
    test "$1" == "-h"
    exit $?
} 1>&2

btk_require_data

base="$BTK_DATA/ncbi/geo"
mkdir -p "$base"
cd "$base"
mkdir -p map matrix/probe matrix/gene miniml

process-geo-accession() {
    map="$1"
    accession=$(basename $map .annot.gz)
    archive=miniml/${accession}.miniml.tpxz

    # Attempt to download archive
    if [ ! -f "$archive" ]; then
        geo fetch -o miniml ${accession}
    fi

    # If it fails, create a zero-size file to prevent future attempts
    if [ ! -f "$archive" ]; then
        touch $archive
        break
    fi
    
    # Probe-level data
    probe=matrix/probe/${accession}.gz
    if [ -s "$archive" -a ! -f $probe ]; then
        geo extract $archive | gzip > $probe || {
            rm -f $probe
            touch $probe
        }
    fi

    # Gene-level data
    gene=matrix/gene/${accession}.gz
    if [ -s "$probe" -a ! -f $gene ]; then
        zcat $probe \
            | dm collapse <(zcat $map | cut -f1-2) \
            | gzip > $gene || {
                rm -f $gene
                touch $gene
            }
    fi
}
export -f process-geo-accession

make-gene-matrices() {
    for map in map/*.annot.gz; do
        echo "* Queueing $(basename $map .annot.gz)"
        sem -j8 --id process-geo process-geo-accession $map
    done
    sem --id process-geo --wait
}

_() {
    if [ ! -d gene-list ]; then
        echo "* Indexing gene-taxon mappings ..." 1>&2
        mkdir -p gene-list
        url=ftp://ftp.ncbi.nlm.nih.gov/gene/DATA/gene_info.gz
        cache_download $url \
            | gzip -cd | sed 1d | cut -f1-2 | grep -v '-' \
            | sort -S 2G -nk2 \
            | awk '{ print $2 >> "gene-list/"$1 }'
        gzip gene-list/*
    fi
}

gene-matrices-for-taxon-name() {
    for gpl in $(sqlite3 GEOmetadb.sqlite \
        "SELECT gpl FROM gpl WHERE organism='$1'"); do
        matrix=matrix/gene/${gpl}.gz
        if [[ -s $matrix ]]; then
            echo $matrix
        fi
    done
}

dm union $(gene-matrices-for-taxon-name "Rattus norvegicus")
